lucas@ubuntu:/mnt/c/Users/Lucas/PycharmProjects/serverless-url-shortener$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding hashicorp/aws versions matching ">= 5.15.0"...
- Finding latest version of hashicorp/archive...
- Installing hashicorp/aws v5.20.0...
- Installed hashicorp/aws v5.20.0 (signed by HashiCorp)
- Installing hashicorp/archive v2.4.0...
- Installed hashicorp/archive v2.4.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
lucas@ubuntu:/mnt/c/Users/Lucas/PycharmProjects/serverless-url-shortener$ terraform apply -auto-approve
data.archive_file.lambda_functions_zip[0]: Reading...
data.archive_file.lambda_functions_zip[2]: Reading...
data.archive_file.lambda_functions_zip[1]: Reading...
data.archive_file.lambda_functions_zip[2]: Read complete after 0s [id=4dc50993b699a2f8eba868cc2ac95a0fc37b2915]
data.archive_file.lambda_functions_zip[0]: Read complete after 0s [id=abaadf1d719c2af5764a1cde8b82a737bf796b84]
data.archive_file.lambda_functions_zip[1]: Read complete after 0s [id=04b380287c58849b76fe1f13be66bfa2a4a05476]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_acm_certificate.acm_certificate will be created
  + resource "aws_acm_certificate" "acm_certificate" {
      + arn                       = (known after apply)
      + domain_name               = "lucaslivrone.tech"
      + domain_validation_options = [
          + {
              + domain_name           = "lucaslivrone.tech"
              + resource_record_name  = (known after apply)
              + resource_record_type  = (known after apply)
              + resource_record_value = (known after apply)
            },
          + {
              + domain_name           = "serverless-url-shortener.lucaslivrone.tech"
              + resource_record_name  = (known after apply)
              + resource_record_type  = (known after apply)
              + resource_record_value = (known after apply)
            },
        ]
      + id                        = (known after apply)
      + key_algorithm             = (known after apply)
      + not_after                 = (known after apply)
      + not_before                = (known after apply)
      + pending_renewal           = (known after apply)
      + renewal_eligibility       = (known after apply)
      + renewal_summary           = (known after apply)
      + status                    = (known after apply)
      + subject_alternative_names = [
          + "lucaslivrone.tech",
          + "serverless-url-shortener.lucaslivrone.tech",
        ]
      + tags_all                  = (known after apply)
      + type                      = (known after apply)
      + validation_emails         = (known after apply)
      + validation_method         = "DNS"
    }

  # aws_acm_certificate_validation.acm_certificate_validation will be created
  + resource "aws_acm_certificate_validation" "acm_certificate_validation" {
      + certificate_arn = (known after apply)
      + id              = (known after apply)
    }

  # aws_apigatewayv2_api.api_gw will be created
  + resource "aws_apigatewayv2_api" "api_gw" {
      + api_endpoint                 = (known after apply)
      + api_key_selection_expression = "$request.header.x-api-key"
      + arn                          = (known after apply)
      + execution_arn                = (known after apply)
      + id                           = (known after apply)
      + name                         = "url-shortener-api"
      + protocol_type                = "HTTP"
      + route_selection_expression   = "$request.method $request.path"
      + tags_all                     = (known after apply)
    }

  # aws_apigatewayv2_integration.api_gw_integration[0] will be created
  + resource "aws_apigatewayv2_integration" "api_gw_integration" {
      + api_id                                    = (known after apply)
      + connection_type                           = "INTERNET"
      + id                                        = (known after apply)
      + integration_response_selection_expression = (known after apply)
      + integration_type                          = "AWS_PROXY"
      + integration_uri                           = (known after apply)
      + payload_format_version                    = "1.0"
      + timeout_milliseconds                      = (known after apply)
    }

  # aws_apigatewayv2_integration.api_gw_integration[1] will be created
  + resource "aws_apigatewayv2_integration" "api_gw_integration" {
      + api_id                                    = (known after apply)
      + connection_type                           = "INTERNET"
      + id                                        = (known after apply)
      + integration_response_selection_expression = (known after apply)
      + integration_type                          = "AWS_PROXY"
      + integration_uri                           = (known after apply)
      + payload_format_version                    = "1.0"
      + timeout_milliseconds                      = (known after apply)
    }

  # aws_apigatewayv2_integration.api_gw_integration[2] will be created
  + resource "aws_apigatewayv2_integration" "api_gw_integration" {
      + api_id                                    = (known after apply)
      + connection_type                           = "INTERNET"
      + id                                        = (known after apply)
      + integration_response_selection_expression = (known after apply)
      + integration_type                          = "AWS_PROXY"
      + integration_uri                           = (known after apply)
      + payload_format_version                    = "1.0"
      + timeout_milliseconds                      = (known after apply)
    }

  # aws_apigatewayv2_route.api_gw_route[0] will be created
  + resource "aws_apigatewayv2_route" "api_gw_route" {
      + api_id             = (known after apply)
      + api_key_required   = false
      + authorization_type = "NONE"
      + id                 = (known after apply)
      + route_key          = "POST /add-url-pair"
      + target             = (known after apply)
    }

  # aws_apigatewayv2_route.api_gw_route[1] will be created
  + resource "aws_apigatewayv2_route" "api_gw_route" {
      + api_id             = (known after apply)
      + api_key_required   = false
      + authorization_type = "NONE"
      + id                 = (known after apply)
      + route_key          = "POST /delete-url-pair"
      + target             = (known after apply)
    }

  # aws_apigatewayv2_route.api_gw_route[2] will be created
  + resource "aws_apigatewayv2_route" "api_gw_route" {
      + api_id             = (known after apply)
      + api_key_required   = false
      + authorization_type = "NONE"
      + id                 = (known after apply)
      + route_key          = "GET /{keyword}"
      + target             = (known after apply)
    }

  # aws_apigatewayv2_stage.api_gw_stage will be created
  + resource "aws_apigatewayv2_stage" "api_gw_stage" {
      + api_id        = (known after apply)
      + arn           = (known after apply)
      + auto_deploy   = true
      + deployment_id = (known after apply)
      + execution_arn = (known after apply)
      + id            = (known after apply)
      + invoke_url    = (known after apply)
      + name          = "url-shortener"
      + tags_all      = (known after apply)

      + access_log_settings {
          + destination_arn = (known after apply)
          + format          = jsonencode(
                {
                  + httpMethod              = "$context.httpMethod"
                  + integrationErrorMessage = "$context.integrationErrorMessage"
                  + protocol                = "$context.protocol"
                  + requestId               = "$context.requestId"
                  + requestTime             = "$context.requestTime"
                  + resourcePath            = "$context.resourcePath"
                  + responseLength          = "$context.responseLength"
                  + routeKey                = "$context.routeKey"
                  + sourceIp                = "$context.identity.sourceIp"
                  + status                  = "$context.status"
                }
            )
        }
    }

  # aws_cloudfront_distribution.cloudfront_distribution will be created
  + resource "aws_cloudfront_distribution" "cloudfront_distribution" {
      + aliases                         = [
          + "serverless-url-shortener.lucaslivrone.tech",
        ]
      + arn                             = (known after apply)
      + caller_reference                = (known after apply)
      + continuous_deployment_policy_id = (known after apply)
      + domain_name                     = (known after apply)
      + enabled                         = true
      + etag                            = (known after apply)
      + hosted_zone_id                  = (known after apply)
      + http_version                    = "http2"
      + id                              = (known after apply)
      + in_progress_validation_batches  = (known after apply)
      + is_ipv6_enabled                 = false
      + last_modified_time              = (known after apply)
      + price_class                     = "PriceClass_All"
      + retain_on_delete                = false
      + staging                         = false
      + status                          = (known after apply)
      + tags_all                        = (known after apply)
      + trusted_key_groups              = (known after apply)
      + trusted_signers                 = (known after apply)
      + wait_for_deployment             = true

      + default_cache_behavior {
          + allowed_methods        = [
              + "DELETE",
              + "GET",
              + "HEAD",
              + "OPTIONS",
              + "PATCH",
              + "POST",
              + "PUT",
            ]
          + cached_methods         = [
              + "GET",
              + "HEAD",
            ]
          + compress               = false
          + default_ttl            = 3600
          + max_ttl                = 86400
          + min_ttl                = 0
          + target_origin_id       = "api-gateway-origin"
          + trusted_key_groups     = (known after apply)
          + trusted_signers        = (known after apply)
          + viewer_protocol_policy = "redirect-to-https"

          + forwarded_values {
              + headers                 = (known after apply)
              + query_string            = false
              + query_string_cache_keys = (known after apply)

              + cookies {
                  + forward           = "none"
                  + whitelisted_names = (known after apply)
                }
            }
        }

      + ordered_cache_behavior {
          + allowed_methods        = [
              + "GET",
              + "HEAD",
            ]
          + cached_methods         = [
              + "GET",
              + "HEAD",
            ]
          + compress               = false
          + default_ttl            = 3600
          + max_ttl                = 86400
          + min_ttl                = 0
          + path_pattern           = "/"
          + target_origin_id       = "s3-origin"
          + viewer_protocol_policy = "redirect-to-https"

          + forwarded_values {
              + headers                 = (known after apply)
              + query_string            = false
              + query_string_cache_keys = (known after apply)

              + cookies {
                  + forward = "none"
                }
            }
        }

      + origin {
          + connection_attempts = 3
          + connection_timeout  = 10
          + domain_name         = (known after apply)
          + origin_id           = "s3-origin"

          + custom_origin_config {
              + http_port                = 80
              + https_port               = 443
              + origin_keepalive_timeout = 5
              + origin_protocol_policy   = "http-only"
              + origin_read_timeout      = 30
              + origin_ssl_protocols     = [
                  + "TLSv1.2",
                ]
            }
        }
      + origin {
          + connection_attempts = 3
          + connection_timeout  = 10
          + domain_name         = (known after apply)
          + origin_id           = "api-gateway-origin"

          + custom_origin_config {
              + http_port                = 80
              + https_port               = 443
              + origin_keepalive_timeout = 5
              + origin_protocol_policy   = "https-only"
              + origin_read_timeout      = 30
              + origin_ssl_protocols     = [
                  + "TLSv1.2",
                ]
            }
        }

      + restrictions {
          + geo_restriction {
              + locations        = (known after apply)
              + restriction_type = "none"
            }
        }

      + viewer_certificate {
          + acm_certificate_arn      = (known after apply)
          + minimum_protocol_version = "TLSv1"
          + ssl_support_method       = "sni-only"
        }
    }

  # aws_cloudwatch_log_group.main_api_gw will be created
  + resource "aws_cloudwatch_log_group" "main_api_gw" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + name              = "/aws/api-gw/url-shortener-api"
      + name_prefix       = (known after apply)
      + retention_in_days = 30
      + skip_destroy      = false
      + tags_all          = (known after apply)
    }

  # aws_dynamodb_table.urls_db will be created
  + resource "aws_dynamodb_table" "urls_db" {
      + arn              = (known after apply)
      + billing_mode     = "PAY_PER_REQUEST"
      + hash_key         = "keyword"
      + id               = (known after apply)
      + name             = "urls-db"
      + read_capacity    = (known after apply)
      + stream_arn       = (known after apply)
      + stream_label     = (known after apply)
      + stream_view_type = (known after apply)
      + tags             = {
          + "Name" = "urls-db"
        }
      + tags_all         = {
          + "Name" = "urls-db"
        }
      + write_capacity   = (known after apply)

      + attribute {
          + name = "keyword"
          + type = "S"
        }
    }

  # aws_iam_role.iam_for_lambda will be created
  + resource "aws_iam_role" "iam_for_lambda" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "lambda.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "iam-for-lambda"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)
    }

  # aws_iam_role_policy.dynamodb_lambda_policy will be created
  + resource "aws_iam_role_policy" "dynamodb_lambda_policy" {
      + id     = (known after apply)
      + name   = "dynamodb-lambda-policy"
      + policy = (known after apply)
      + role   = (known after apply)
    }

  # aws_iam_role_policy_attachment.lambda_policy will be created
  + resource "aws_iam_role_policy_attachment" "lambda_policy" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      + role       = "iam-for-lambda"
    }

  # aws_lambda_function.lambda_functions[0] will be created
  + resource "aws_lambda_function" "lambda_functions" {
      + architectures                  = (known after apply)
      + arn                            = (known after apply)
      + filename                       = "add_url_pair.zip"
      + function_name                  = "add_url_pair"
      + handler                        = "add_url_pair.lambda_handler"
      + id                             = (known after apply)
      + invoke_arn                     = (known after apply)
      + last_modified                  = (known after apply)
      + memory_size                    = 128
      + package_type                   = "Zip"
      + publish                        = false
      + qualified_arn                  = (known after apply)
      + qualified_invoke_arn           = (known after apply)
      + reserved_concurrent_executions = -1
      + role                           = (known after apply)
      + runtime                        = "python3.11"
      + signing_job_arn                = (known after apply)
      + signing_profile_version_arn    = (known after apply)
      + skip_destroy                   = false
      + source_code_hash               = "iGAVrgOvFjYvQFuA56mf/IByPOCpZ8LJOM0n51ZVbUA="
      + source_code_size               = (known after apply)
      + tags                           = {
          + "Description" = "Adds a new URL pair into the database"
          + "Name"        = "add_url_pair"
        }
      + tags_all                       = {
          + "Description" = "Adds a new URL pair into the database"
          + "Name"        = "add_url_pair"
        }
      + timeout                        = 3
      + version                        = (known after apply)
    }

  # aws_lambda_function.lambda_functions[1] will be created
  + resource "aws_lambda_function" "lambda_functions" {
      + architectures                  = (known after apply)
      + arn                            = (known after apply)
      + filename                       = "delete_url_pair.zip"
      + function_name                  = "delete_url_pair"
      + handler                        = "delete_url_pair.lambda_handler"
      + id                             = (known after apply)
      + invoke_arn                     = (known after apply)
      + last_modified                  = (known after apply)
      + memory_size                    = 128
      + package_type                   = "Zip"
      + publish                        = false
      + qualified_arn                  = (known after apply)
      + qualified_invoke_arn           = (known after apply)
      + reserved_concurrent_executions = -1
      + role                           = (known after apply)
      + runtime                        = "python3.11"
      + signing_job_arn                = (known after apply)
      + signing_profile_version_arn    = (known after apply)
      + skip_destroy                   = false
      + source_code_hash               = "blW483DTxX75LICY6342g6TI2gzAaRKbhXxYYI5x89Q="
      + source_code_size               = (known after apply)
      + tags                           = {
          + "Description" = "Deletes a specified URL pair from the database"
          + "Name"        = "delete_url_pair"
        }
      + tags_all                       = {
          + "Description" = "Deletes a specified URL pair from the database"
          + "Name"        = "delete_url_pair"
        }
      + timeout                        = 3
      + version                        = (known after apply)
    }

  # aws_lambda_function.lambda_functions[2] will be created
  + resource "aws_lambda_function" "lambda_functions" {
      + architectures                  = (known after apply)
      + arn                            = (known after apply)
      + filename                       = "redirect.zip"
      + function_name                  = "redirect"
      + handler                        = "redirect.lambda_handler"
      + id                             = (known after apply)
      + invoke_arn                     = (known after apply)
      + last_modified                  = (known after apply)
      + memory_size                    = 128
      + package_type                   = "Zip"
      + publish                        = false
      + qualified_arn                  = (known after apply)
      + qualified_invoke_arn           = (known after apply)
      + reserved_concurrent_executions = -1
      + role                           = (known after apply)
      + runtime                        = "python3.11"
      + signing_job_arn                = (known after apply)
      + signing_profile_version_arn    = (known after apply)
      + skip_destroy                   = false
      + source_code_hash               = "Ubob9KTK5a/0hUJpaYGFuvcirBc/9NJwVf7y9dC76Mo="
      + source_code_size               = (known after apply)
      + tags                           = {
          + "Description" = "Redirects to the Full URL from a keyword"
          + "Name"        = "redirect"
        }
      + tags_all                       = {
          + "Description" = "Redirects to the Full URL from a keyword"
          + "Name"        = "redirect"
        }
      + timeout                        = 3
      + version                        = (known after apply)
    }

  # aws_lambda_permission.lambda_permission[0] will be created
  + resource "aws_lambda_permission" "lambda_permission" {
      + action              = "lambda:InvokeFunction"
      + function_name       = "add_url_pair"
      + id                  = (known after apply)
      + principal           = "apigateway.amazonaws.com"
      + source_arn          = (known after apply)
      + statement_id        = "AllowExecutionFromAPIGateway"
      + statement_id_prefix = (known after apply)
    }

  # aws_lambda_permission.lambda_permission[1] will be created
  + resource "aws_lambda_permission" "lambda_permission" {
      + action              = "lambda:InvokeFunction"
      + function_name       = "delete_url_pair"
      + id                  = (known after apply)
      + principal           = "apigateway.amazonaws.com"
      + source_arn          = (known after apply)
      + statement_id        = "AllowExecutionFromAPIGateway"
      + statement_id_prefix = (known after apply)
    }

  # aws_lambda_permission.lambda_permission[2] will be created
  + resource "aws_lambda_permission" "lambda_permission" {
      + action              = "lambda:InvokeFunction"
      + function_name       = "redirect"
      + id                  = (known after apply)
      + principal           = "apigateway.amazonaws.com"
      + source_arn          = (known after apply)
      + statement_id        = "AllowExecutionFromAPIGateway"
      + statement_id_prefix = (known after apply)
    }

  # aws_route53_record.acm_certificate_validation["lucaslivrone.tech"] will be created
  + resource "aws_route53_record" "acm_certificate_validation" {
      + allow_overwrite = true
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = (known after apply)
      + records         = (known after apply)
      + ttl             = 300
      + type            = (known after apply)
      + zone_id         = (known after apply)
    }

  # aws_route53_record.acm_certificate_validation["serverless-url-shortener.lucaslivrone.tech"] will be created
  + resource "aws_route53_record" "acm_certificate_validation" {
      + allow_overwrite = true
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = (known after apply)
      + records         = (known after apply)
      + ttl             = 300
      + type            = (known after apply)
      + zone_id         = (known after apply)
    }

  # aws_route53_record.serverless_subdomain will be created
  + resource "aws_route53_record" "serverless_subdomain" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "serverless-url-shortener"
      + records         = (known after apply)
      + ttl             = 300
      + type            = "CNAME"
      + zone_id         = (known after apply)
    }

  # aws_route53_zone.hosted_zone will be created
  + resource "aws_route53_zone" "hosted_zone" {
      + arn                 = (known after apply)
      + comment             = "Managed by Terraform"
      + force_destroy       = false
      + id                  = (known after apply)
      + name                = "lucaslivrone.tech"
      + name_servers        = (known after apply)
      + primary_name_server = (known after apply)
      + tags_all            = (known after apply)
      + zone_id             = (known after apply)
    }

  # aws_s3_bucket.static_website will be created
  + resource "aws_s3_bucket" "static_website" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "serverless-url-shortener"
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "Name" = "serverless-url-shortener"
        }
      + tags_all                    = {
          + "Name" = "serverless-url-shortener"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)
    }

  # aws_s3_bucket_acl.bucket_acl will be created
  + resource "aws_s3_bucket_acl" "bucket_acl" {
      + acl    = "public-read"
      + bucket = (known after apply)
      + id     = (known after apply)
    }

  # aws_s3_bucket_ownership_controls.bucket_ownership_controls will be created
  + resource "aws_s3_bucket_ownership_controls" "bucket_ownership_controls" {
      + bucket = (known after apply)
      + id     = (known after apply)

      + rule {
          + object_ownership = "BucketOwnerPreferred"
        }
    }

  # aws_s3_bucket_policy.bucket-policy will be created
  + resource "aws_s3_bucket_policy" "bucket-policy" {
      + bucket = (known after apply)
      + id     = (known after apply)
      + policy = jsonencode(
            {
              + Id        = "Policy"
              + Statement = [
                  + {
                      + Action    = [
                          + "s3:GetObject",
                        ]
                      + Effect    = "Allow"
                      + Principal = {
                          + AWS = [
                              + "*",
                            ]
                        }
                      + Resource  = "arn:aws:s3:::serverless-url-shortener/*"
                    },
                ]
            }
        )
    }

  # aws_s3_bucket_public_access_block.bucket_public_access will be created
  + resource "aws_s3_bucket_public_access_block" "bucket_public_access" {
      + block_public_acls       = false
      + block_public_policy     = false
      + bucket                  = (known after apply)
      + id                      = (known after apply)
      + ignore_public_acls      = false
      + restrict_public_buckets = false
    }

  # aws_s3_bucket_versioning.bucket_versioning will be created
  + resource "aws_s3_bucket_versioning" "bucket_versioning" {
      + bucket = (known after apply)
      + id     = (known after apply)

      + versioning_configuration {
          + mfa_delete = (known after apply)
          + status     = "Enabled"
        }
    }

  # aws_s3_bucket_website_configuration.web_configuration will be created
  + resource "aws_s3_bucket_website_configuration" "web_configuration" {
      + bucket           = (known after apply)
      + id               = (known after apply)
      + routing_rules    = (known after apply)
      + website_domain   = (known after apply)
      + website_endpoint = (known after apply)

      + error_document {
          + key = "error.html"
        }

      + index_document {
          + suffix = "index.html"
        }
    }

  # aws_s3_object.error_html will be created
  + resource "aws_s3_object" "error_html" {
      + acl                    = (known after apply)
      + bucket                 = (known after apply)
      + bucket_key_enabled     = (known after apply)
      + checksum_crc32         = (known after apply)
      + checksum_crc32c        = (known after apply)
      + checksum_sha1          = (known after apply)
      + checksum_sha256        = (known after apply)
      + content_type           = "text/html"
      + etag                   = (known after apply)
      + force_destroy          = false
      + id                     = (known after apply)
      + key                    = "error.html"
      + kms_key_id             = (known after apply)
      + server_side_encryption = (known after apply)
      + source                 = "html/error.html"
      + storage_class          = (known after apply)
      + tags_all               = (known after apply)
      + version_id             = (known after apply)
    }

  # aws_s3_object.index_html will be created
  + resource "aws_s3_object" "index_html" {
      + acl                    = (known after apply)
      + bucket                 = (known after apply)
      + bucket_key_enabled     = (known after apply)
      + checksum_crc32         = (known after apply)
      + checksum_crc32c        = (known after apply)
      + checksum_sha1          = (known after apply)
      + checksum_sha256        = (known after apply)
      + content_type           = "text/html"
      + etag                   = (known after apply)
      + force_destroy          = false
      + id                     = (known after apply)
      + key                    = "index.html"
      + kms_key_id             = (known after apply)
      + server_side_encryption = (known after apply)
      + source                 = "html/index.html"
      + storage_class          = (known after apply)
      + tags_all               = (known after apply)
      + version_id             = (known after apply)
    }

Plan: 35 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cloudfront_domain_name   = (known after apply)
  + serverless-url-shortener = (known after apply)
aws_route53_zone.hosted_zone: Creating...
aws_iam_role.iam_for_lambda: Creating...
aws_dynamodb_table.urls_db: Creating...
aws_apigatewayv2_api.api_gw: Creating...
aws_s3_bucket.static_website: Creating...
aws_apigatewayv2_api.api_gw: Creation complete after 1s [id=ex68jqshyd]
aws_cloudwatch_log_group.main_api_gw: Creating...
aws_iam_role.iam_for_lambda: Creation complete after 2s [id=iam-for-lambda]
aws_iam_role_policy_attachment.lambda_policy: Creating...
aws_lambda_function.lambda_functions[2]: Creating...
aws_lambda_function.lambda_functions[0]: Creating...
aws_lambda_function.lambda_functions[1]: Creating...
aws_iam_role_policy_attachment.lambda_policy: Creation complete after 0s [id=iam-for-lambda-20231009144910151400000002]
aws_cloudwatch_log_group.main_api_gw: Creation complete after 2s [id=/aws/api-gw/url-shortener-api]
aws_apigatewayv2_stage.api_gw_stage: Creating...
aws_apigatewayv2_stage.api_gw_stage: Creation complete after 1s [id=url-shortener]
aws_dynamodb_table.urls_db: Creation complete after 9s [id=urls-db]
aws_iam_role_policy.dynamodb_lambda_policy: Creating...
aws_iam_role_policy.dynamodb_lambda_policy: Creation complete after 1s [id=iam-for-lambda:dynamodb-lambda-policy]
aws_s3_bucket.static_website: Still creating... [10s elapsed]
aws_route53_zone.hosted_zone: Still creating... [10s elapsed]
aws_lambda_function.lambda_functions[2]: Still creating... [10s elapsed]
aws_lambda_function.lambda_functions[0]: Still creating... [10s elapsed]
aws_lambda_function.lambda_functions[1]: Still creating... [10s elapsed]
aws_lambda_function.lambda_functions[2]: Creation complete after 16s [id=redirect]
aws_route53_zone.hosted_zone: Still creating... [20s elapsed]
aws_s3_bucket.static_website: Still creating... [20s elapsed]
aws_lambda_function.lambda_functions[1]: Still creating... [20s elapsed]
aws_lambda_function.lambda_functions[0]: Still creating... [20s elapsed]
aws_s3_bucket.static_website: Creation complete after 23s [id=serverless-url-shortener]
aws_s3_bucket_ownership_controls.bucket_ownership_controls: Creating...
aws_s3_bucket_public_access_block.bucket_public_access: Creating...
aws_s3_bucket_versioning.bucket_versioning: Creating...
aws_s3_bucket_website_configuration.web_configuration: Creating...
aws_s3_object.error_html: Creating...
aws_s3_object.index_html: Creating...
aws_s3_bucket_public_access_block.bucket_public_access: Creation complete after 0s [id=serverless-url-shortener]
aws_s3_object.index_html: Creation complete after 1s [id=index.html]
aws_s3_object.error_html: Creation complete after 1s [id=error.html]
aws_lambda_function.lambda_functions[1]: Creation complete after 22s [id=delete_url_pair]
aws_s3_bucket_ownership_controls.bucket_ownership_controls: Creation complete after 1s [id=serverless-url-shortener]
aws_s3_bucket_website_configuration.web_configuration: Creation complete after 1s [id=serverless-url-shortener]
aws_s3_bucket_acl.bucket_acl: Creating...
aws_s3_bucket_acl.bucket_acl: Creation complete after 1s [id=serverless-url-shortener,public-read]
aws_s3_bucket_policy.bucket-policy: Creating...
aws_s3_bucket_versioning.bucket_versioning: Creation complete after 2s [id=serverless-url-shortener]
aws_s3_bucket_policy.bucket-policy: Creation complete after 0s [id=serverless-url-shortener]
aws_lambda_function.lambda_functions[0]: Creation complete after 28s [id=add_url_pair]
aws_apigatewayv2_integration.api_gw_integration[2]: Creating...
aws_lambda_permission.lambda_permission[1]: Creating...
aws_apigatewayv2_integration.api_gw_integration[1]: Creating...
aws_lambda_permission.lambda_permission[0]: Creating...
aws_lambda_permission.lambda_permission[2]: Creating...
aws_apigatewayv2_integration.api_gw_integration[0]: Creating...
aws_route53_zone.hosted_zone: Still creating... [30s elapsed]
aws_apigatewayv2_integration.api_gw_integration[2]: Creation complete after 1s [id=tyr76d1]
aws_apigatewayv2_integration.api_gw_integration[0]: Creation complete after 1s [id=m7s0k33]
aws_apigatewayv2_integration.api_gw_integration[1]: Creation complete after 1s [id=0imcdz1]
aws_apigatewayv2_route.api_gw_route[2]: Creating...
aws_apigatewayv2_route.api_gw_route[1]: Creating...
aws_apigatewayv2_route.api_gw_route[0]: Creating...
aws_lambda_permission.lambda_permission[0]: Creation complete after 1s [id=AllowExecutionFromAPIGateway]
aws_lambda_permission.lambda_permission[2]: Creation complete after 1s [id=AllowExecutionFromAPIGateway]
aws_lambda_permission.lambda_permission[1]: Creation complete after 1s [id=AllowExecutionFromAPIGateway]
aws_apigatewayv2_route.api_gw_route[0]: Creation complete after 0s [id=9zpmqy5]
aws_apigatewayv2_route.api_gw_route[2]: Creation complete after 0s [id=55e7p7e]
aws_apigatewayv2_route.api_gw_route[1]: Creation complete after 0s [id=m2cly7r]
aws_route53_zone.hosted_zone: Creation complete after 35s [id=Z06353913FBCBNWWI4JPR]
aws_acm_certificate.acm_certificate: Creating...
aws_acm_certificate.acm_certificate: Still creating... [10s elapsed]
aws_acm_certificate.acm_certificate: Creation complete after 11s [id=arn:aws:acm:us-east-1:935454340652:certificate/0da6d7bc-759e-42a1-accb-822130d9da3b]
aws_acm_certificate_validation.acm_certificate_validation: Creating...
aws_route53_record.acm_certificate_validation["serverless-url-shortener.lucaslivrone.tech"]: Creating...
aws_route53_record.acm_certificate_validation["lucaslivrone.tech"]: Creating...
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [10s elapsed]
aws_route53_record.acm_certificate_validation["lucaslivrone.tech"]: Still creating... [10s elapsed]
aws_route53_record.acm_certificate_validation["serverless-url-shortener.lucaslivrone.tech"]: Still creating... [10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [20s elapsed]
aws_route53_record.acm_certificate_validation["lucaslivrone.tech"]: Still creating... [20s elapsed]
aws_route53_record.acm_certificate_validation["serverless-url-shortener.lucaslivrone.tech"]: Still creating... [20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [30s elapsed]
aws_route53_record.acm_certificate_validation["lucaslivrone.tech"]: Still creating... [30s elapsed]
aws_route53_record.acm_certificate_validation["serverless-url-shortener.lucaslivrone.tech"]: Still creating... [30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [40s elapsed]
aws_route53_record.acm_certificate_validation["serverless-url-shortener.lucaslivrone.tech"]: Still creating... [40s elapsed]
aws_route53_record.acm_certificate_validation["lucaslivrone.tech"]: Still creating... [40s elapsed]
aws_route53_record.acm_certificate_validation["serverless-url-shortener.lucaslivrone.tech"]: Creation complete after 43s [id=Z06353913FBCBNWWI4JPR__c3c003dd40d4cc7fd169213b8fa0c8e9.serverless-url-shortener.lucaslivrone.tech._CNAME]
aws_route53_record.acm_certificate_validation["lucaslivrone.tech"]: Creation complete after 49s [id=Z06353913FBCBNWWI4JPR__1ace6716d79dc1c7dfc1b0ea6f2c453c.lucaslivrone.tech._CNAME]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [1m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [1m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [1m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [1m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [1m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [1m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [2m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [2m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [2m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [2m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [2m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [2m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [3m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [3m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [3m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [3m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [3m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [3m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [4m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [4m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [4m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [4m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [4m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [4m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [5m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [5m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [5m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [5m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [5m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [5m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [6m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [6m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [6m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [6m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [6m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [6m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [7m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [7m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [7m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [7m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [7m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [7m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [8m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [8m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [8m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [8m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [8m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [8m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [9m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [9m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [9m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [9m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [9m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [9m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [10m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [10m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [10m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [10m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [10m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [10m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [11m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [11m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [11m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [11m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [11m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [11m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [12m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [12m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [12m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [12m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [12m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [12m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [13m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [13m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [13m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [13m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [13m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [13m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [14m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [14m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [14m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [14m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [14m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [14m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [15m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [15m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [15m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [15m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [15m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [15m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [16m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [16m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [16m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [16m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [16m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [16m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [17m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [17m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [17m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [17m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [17m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [17m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [18m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [18m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [18m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [18m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [18m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [18m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [19m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [19m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [19m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [19m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [19m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [19m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [20m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [20m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [20m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [20m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [20m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [20m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [21m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [21m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [21m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [21m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [21m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [21m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [22m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [22m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [22m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [22m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [22m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [22m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [23m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [23m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [23m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [23m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [23m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [23m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [24m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [24m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [24m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [24m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [24m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [24m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [25m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [25m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [25m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [25m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [25m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [25m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [26m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [26m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [26m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [26m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [26m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [26m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [27m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [27m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [27m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [27m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [27m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [27m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [28m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [28m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [28m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [28m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [28m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [28m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [29m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [29m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [29m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [29m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [29m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [29m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [30m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [30m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [30m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [30m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [30m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [30m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [31m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [31m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [31m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [31m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [31m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [31m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [32m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [32m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [32m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [32m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [32m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [32m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [33m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [33m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [33m20s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [33m30s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [33m40s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [33m50s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [34m0s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Still creating... [34m10s elapsed]
aws_acm_certificate_validation.acm_certificate_validation: Creation complete after 34m20s [id=0001-01-01 00:00:00 +0000 UTC]
aws_cloudfront_distribution.cloudfront_distribution: Creating...
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [10s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [20s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [30s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [40s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [50s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [1m0s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [1m10s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [1m20s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [1m30s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [1m40s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [1m50s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [2m0s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [2m10s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [2m20s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [2m30s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [2m40s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [2m50s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [3m0s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [3m10s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [3m20s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [3m30s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [3m40s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [3m50s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [4m0s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [4m10s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [4m20s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [4m30s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [4m40s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Still creating... [4m50s elapsed]
aws_cloudfront_distribution.cloudfront_distribution: Creation complete after 4m57s [id=E2HFQUE36S4N6L]
aws_route53_record.serverless_subdomain: Creating...
aws_route53_record.serverless_subdomain: Still creating... [10s elapsed]
aws_route53_record.serverless_subdomain: Still creating... [20s elapsed]
aws_route53_record.serverless_subdomain: Still creating... [30s elapsed]
aws_route53_record.serverless_subdomain: Still creating... [40s elapsed]
aws_route53_record.serverless_subdomain: Creation complete after 48s [id=Z06353913FBCBNWWI4JPR_serverless-url-shortener_CNAME]

Apply complete! Resources: 35 added, 0 changed, 0 destroyed.

Outputs:

cloudfront_domain_name = "https://d3ofhljujqulf6.cloudfront.net"
serverless-url-shortener = "https://serverless-url-shortener.lucaslivrone.tech"
lucas@ubuntu:/mnt/c/Users/Lucas/PycharmProjects/serverless-url-shortener$

